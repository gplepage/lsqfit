To install:

1. The numpy, scipy, and gvar Python packages are also required but these are
	installed automatically if not present.

	(Optional) Install the Gnu Scientific Library (GSL v2.2.1 or greater) 
	which provides underlying fitters, written in C. Should the build process 
	for lsqfit have difficulty finding the GSL libraries or headers, modify the 
	build script (setup.py) to point to the directories containing the gsl
	headers and compiled libraries: add explicit addresses to the
	include_dirs, library_dirs, and runtime_library_dirs lists in setup.py
	(see dictionary ext_args_gsl). lsqfit can be built without GSL, using
	scipy instead, but more options are available if both
	are included.
	(http://www.gnu.org/software/gsl/)

	lsqfit works for Python 2.7, and Python 3, but support for Python 2.7  
	will disappear eventually.

2. Use 'make install' to install gvar into the system's standard library
	(as opposed to the user's library; use 'make install-user' to install
	to the user's library).

	N.B. Rather than using make and the makefile, one can instead use
	standard python installation tools: run 'pip install .' to install
	to the system library (or 'pip install . --user' to install to
	the user's directory) from within the top directory.

	N.B. If you have previously installed older versions of lsqfit,
	consider removing the earlier modules to make sure that the new ones are
	used by Python.

	N.B. Adjust the entries for variables include_dirs, library_dirs, and
	runtime_library_dirs in setup.py if 'make install' generates complaints
	about being unable to find header files for gsl or numpy, or libraries for
	gsl. These variables are lists of directories that the build code looks in
	for include files and libraries, in addition to the standard places built
	into the system.

3. (Optional) Run 'make tests' to test your installation of lsqfit if you
	are using Python 2.7 or later (they don't work as well with Python 2.6).
	The tests have been successful if the output ends with "OK".
	Some tests involve random numbers and so may occasionally --- less than
	1 in 100 runs --- fail due to rare multi-sigma fluctuations; rerun the
	tests if they do fail. Contact g.p.lepage@cornell.edu if there are
	persistent, frequent failures.

	N.B. The tests can also be run directly using Python's unittest module:
	"python -m unittest discover".

4. (Optional) Change to subdirectory examples/ and look at some of the
 	sample .py files given there that use lsqfit. Run them one by one ---
	"python simple.py" etc --- or all at once using "make run".

5. (Optional) Use 'make clean' to erase work files/directories.


To uninstall:

1. 'make uninstall' uninstalls what was installed. It
    uses pip uninstall.


Problems:

	Contact Peter Lepage: g.p.lepage@cornell.edu


# Copyright (c) 2008-2023 G. Peter Lepage.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version (see <http://www.gnu.org/licenses/>).
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
